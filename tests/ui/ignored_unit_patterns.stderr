error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:11:12
   |
LL |         Ok(_) => {},
   |            ^ help: use `()` instead of `_`: `()`
   |
   = note: `-D clippy::ignored-unit-patterns` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::ignored_unit_patterns)]`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:12:13
   |
LL |         Err(_) => {},
   |             ^ help: use `()` instead of `_`: `()`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:14:15
   |
LL |     if let Ok(_) = foo() {}
   |               ^ help: use `()` instead of `_`: `()`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:16:28
   |
LL |     let _ = foo().map_err(|_| todo!());
   |                            ^ help: use `()` instead of `_`: `()`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:22:16
   |
LL |             Ok(_) => {},
   |                ^ help: use `()` instead of `_`: `()`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:24:17
   |
LL |             Err(_) => {},
   |                 ^ help: use `()` instead of `_`: `()`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:36:9
   |
LL |     let _ = foo().unwrap();
   |         ^ help: use `()` instead of `_`: `()`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:45:13
   |
LL |         (1, _) => unimplemented!(),
   |             ^ help: use `()` instead of `_`: `()`

error: matching over `()` is more explicit
  --> $DIR/ignored_unit_patterns.rs:52:13
   |
LL |     for (x, _) in v {
   |             ^ help: use `()` instead of `_`: `()`

error: aborting due to 9 previous errors

