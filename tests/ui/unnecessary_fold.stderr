error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:6:20
   |
LL |     let _ = (0..3).fold(false, |acc, x| acc || x > 2);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `any(|x| x > 2)`
   |
   = note: `-D clippy::unnecessary-fold` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::unnecessary_fold)]`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:8:20
   |
LL |     let _ = (0..3).fold(true, |acc, x| acc && x > 2);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `all(|x| x > 2)`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:10:25
   |
LL |     let _: i32 = (0..3).fold(0, |acc, x| acc + x);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `sum()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:12:25
   |
LL |     let _: i32 = (0..3).fold(1, |acc, x| acc * x);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `product()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:17:41
   |
LL |     let _: bool = (0..3).map(|x| 2 * x).fold(false, |acc, x| acc || x > 2);
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `any(|x| x > 2)`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:47:10
   |
LL |         .fold(false, |acc, x| acc || x > 2);
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `any(|x| x > 2)`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:58:33
   |
LL |         assert_eq!(map.values().fold(0, |x, y| x + y), 0);
   |                                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `sum::<i32>()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:61:30
   |
LL |         let _ = map.values().fold(0, |x, y| x + y);
   |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `sum::<i32>()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:62:30
   |
LL |         let _ = map.values().fold(1, |x, y| x * y);
   |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `product::<i32>()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:63:35
   |
LL |         let _: i32 = map.values().fold(0, |x, y| x + y);
   |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `sum()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:64:35
   |
LL |         let _: i32 = map.values().fold(1, |x, y| x * y);
   |                                   ^^^^^^^^^^^^^^^^^^^^^ help: try: `product()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:65:31
   |
LL |         anything(map.values().fold(0, |x, y| x + y));
   |                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `sum::<i32>()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:66:31
   |
LL |         anything(map.values().fold(1, |x, y| x * y));
   |                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `product::<i32>()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:67:26
   |
LL |         num(map.values().fold(0, |x, y| x + y));
   |                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `sum()`

error: this `.fold` can be written more succinctly using another method
  --> $DIR/unnecessary_fold.rs:68:26
   |
LL |         num(map.values().fold(1, |x, y| x * y));
   |                          ^^^^^^^^^^^^^^^^^^^^^ help: try: `product()`

error: aborting due to 15 previous errors

