error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:22:5
   |
LL |     binary_heap = binary_heap.into_iter().filter(|x| x % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `binary_heap.retain(|x| x % 2 == 0)`
   |
   = note: `-D clippy::manual-retain` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::manual_retain)]`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:23:5
   |
LL |     binary_heap = binary_heap.iter().filter(|&x| x % 2 == 0).copied().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `binary_heap.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:24:5
   |
LL |     binary_heap = binary_heap.iter().filter(|&x| x % 2 == 0).cloned().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `binary_heap.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:54:5
   |
LL |     btree_map = btree_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_map.retain(|k, _| k % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:55:5
   |
LL |     btree_map = btree_map.into_iter().filter(|(_, v)| v % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_map.retain(|_, &mut v| v % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:56:5
   |
LL | /     btree_map = btree_map
LL | |         .into_iter()
LL | |         .filter(|(k, v)| (k % 2 == 0) && (v % 2 == 0))
LL | |         .collect();
   | |__________________^ help: consider calling `.retain()` instead: `btree_map.retain(|k, &mut v| (k % 2 == 0) && (v % 2 == 0))`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:78:5
   |
LL |     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).copied().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:79:5
   |
LL |     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).cloned().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:80:5
   |
LL |     btree_set = btree_set.into_iter().filter(|x| x % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:110:5
   |
LL |     hash_map = hash_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_map.retain(|k, _| k % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:111:5
   |
LL |     hash_map = hash_map.into_iter().filter(|(_, v)| v % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_map.retain(|_, &mut v| v % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:112:5
   |
LL | /     hash_map = hash_map
LL | |         .into_iter()
LL | |         .filter(|(k, v)| (k % 2 == 0) && (v % 2 == 0))
LL | |         .collect();
   | |__________________^ help: consider calling `.retain()` instead: `hash_map.retain(|k, &mut v| (k % 2 == 0) && (v % 2 == 0))`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:133:5
   |
LL |     hash_set = hash_set.into_iter().filter(|x| x % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:134:5
   |
LL |     hash_set = hash_set.iter().filter(|&x| x % 2 == 0).copied().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:135:5
   |
LL |     hash_set = hash_set.iter().filter(|&x| x % 2 == 0).cloned().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:164:5
   |
LL |     s = s.chars().filter(|&c| c != 'o').to_owned().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `s.retain(|c| c != 'o')`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:176:5
   |
LL |     vec = vec.iter().filter(|&x| x % 2 == 0).copied().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:177:5
   |
LL |     vec = vec.iter().filter(|&x| x % 2 == 0).cloned().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:178:5
   |
LL |     vec = vec.into_iter().filter(|x| x % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:200:5
   |
LL |     vec_deque = vec_deque.iter().filter(|&x| x % 2 == 0).copied().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:201:5
   |
LL |     vec_deque = vec_deque.iter().filter(|&x| x % 2 == 0).cloned().collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`

error: this expression can be written more simply using `.retain()`
  --> $DIR/manual_retain.rs:202:5
   |
LL |     vec_deque = vec_deque.into_iter().filter(|x| x % 2 == 0).collect();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`

error: aborting due to 22 previous errors

