error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:11:5
   |
LL | /     if let Some(x) = string {
LL | |         (true, x)
LL | |     } else {
LL | |         (false, "hello")
LL | |     }
   | |_____^ help: try: `string.map_or((false, "hello"), |x| (true, x))`
   |
   = note: `-D clippy::option-if-let-else` implied by `-D warnings`

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:29:13
   |
LL |     let _ = if let Some(s) = *string { s.len() } else { 0 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `string.map_or(0, |s| s.len())`

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:30:13
   |
LL |     let _ = if let Some(s) = &num { s } else { &0 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:31:13
   |
LL |       let _ = if let Some(s) = &mut num {
   |  _____________^
LL | |         *s += 1;
LL | |         s
LL | |     } else {
LL | |         &mut 0
LL | |     };
   | |_____^
   |
help: try
   |
LL ~     let _ = num.as_mut().map_or(&mut 0, |s| {
LL +         *s += 1;
LL +         s
LL ~     });
   |

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:37:13
   |
LL |     let _ = if let Some(ref s) = num { s } else { &0 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:38:13
   |
LL |       let _ = if let Some(mut s) = num {
   |  _____________^
LL | |         s += 1;
LL | |         s
LL | |     } else {
LL | |         0
LL | |     };
   | |_____^
   |
help: try
   |
LL ~     let _ = num.map_or(0, |mut s| {
LL +         s += 1;
LL +         s
LL ~     });
   |

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:44:13
   |
LL |       let _ = if let Some(ref mut s) = num {
   |  _____________^
LL | |         *s += 1;
LL | |         s
LL | |     } else {
LL | |         &mut 0
LL | |     };
   | |_____^
   |
help: try
   |
LL ~     let _ = num.as_mut().map_or(&mut 0, |s| {
LL +         *s += 1;
LL +         s
LL ~     });
   |

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:53:5
   |
LL | /     if let Some(x) = arg {
LL | |         let y = x * x;
LL | |         y * y
LL | |     } else {
LL | |         13
LL | |     }
   | |_____^
   |
help: try
   |
LL ~     arg.map_or(13, |x| {
LL +         let y = x * x;
LL +         y * y
LL +     })
   |

error: use Option::map_or_else instead of an if let/else
  --> $DIR/option_if_let_else.rs:66:13
   |
LL |       let _ = if let Some(x) = arg {
   |  _____________^
LL | |         x
LL | |     } else {
LL | |         // map_or_else must be suggested
LL | |         side_effect()
LL | |     };
   | |_____^ help: try: `arg.map_or_else(|| side_effect(), |x| x)`

error: use Option::map_or_else instead of an if let/else
  --> $DIR/option_if_let_else.rs:75:13
   |
LL |       let _ = if let Some(x) = arg {
   |  _____________^
LL | |         x * x * x * x
LL | |     } else {
LL | |         let mut y = 1;
...  |
LL | |         y
LL | |     };
   | |_____^
   |
help: try
   |
LL ~     let _ = arg.map_or_else(|| {
LL +         let mut y = 1;
LL +         y = (y + 2 / y) / 2;
LL +         y = (y + 2 / y) / 2;
LL +         y
LL ~     }, |x| x * x * x * x);
   |

error: use Option::map_or_else instead of an if let/else
  --> $DIR/option_if_let_else.rs:108:13
   |
LL | /             if let Some(idx) = s.find('.') {
LL | |                 vec![s[..idx].to_string(), s[idx..].to_string()]
LL | |             } else {
LL | |                 vec![s.to_string()]
LL | |             }
   | |_____________^ help: try: `s.find('.').map_or_else(|| vec![s.to_string()], |idx| vec![s[..idx].to_string(), s[idx..].to_string()])`

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:132:13
   |
LL |     let _ = if let Some(x) = optional { x + 2 } else { 5 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `optional.map_or(5, |x| x + 2)`

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:141:13
   |
LL |       let _ = if let Some(x) = Some(0) {
   |  _____________^
LL | |         loop {
LL | |             if x == 0 {
LL | |                 break x;
...  |
LL | |         0
LL | |     };
   | |_____^
   |
help: try
   |
LL ~     let _ = Some(0).map_or(0, |x| loop {
LL +             if x == 0 {
LL +                 break x;
LL +             }
LL ~         });
   |

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:169:13
   |
LL |     let _ = if let Some(x) = Some(0) { s.len() + x } else { s.len() };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Some(0).map_or(s.len(), |x| s.len() + x)`

error: use Option::map_or instead of an if let/else
  --> $DIR/option_if_let_else.rs:173:13
   |
LL |       let _ = if let Some(x) = Some(0) {
   |  _____________^
LL | |         let s = s;
LL | |         s.len() + x
LL | |     } else {
LL | |         1
LL | |     };
   | |_____^
   |
help: try
   |
LL ~     let _ = Some(0).map_or(1, |x| {
LL +         let s = s;
LL +         s.len() + x
LL ~     });
   |

error: aborting due to 15 previous errors

