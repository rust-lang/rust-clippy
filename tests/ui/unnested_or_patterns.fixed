// run-rustfix

#![feature(box_patterns)]
#![warn(clippy::unnested_or_patterns)]
#![allow(clippy::cognitive_complexity, clippy::match_ref_pats, clippy::upper_case_acronyms)]
#![allow(unreachable_patterns, irrefutable_let_patterns, unused_variables)]

fn main() {
    // Should be ignored by this lint, as nesting requires more characters.
    if let &0 | &2 = &0 {}

    if let box (0 | 2) = Box::new(0) {}
    if let box (0 | 1 | 2 | 3 | 4) = Box::new(0) {}
    const C0: Option<u8> = Some(1);
    if let Some(1 | 2) | C0 = None {}
    if let &mut (0 | 2) = &mut 0 {}
    if let x @ (0 | 2) = 0 {}
    if let (0, 1 | 2 | 3) = (0, 0) {}
    if let (1 | 2 | 3, 0) = (0, 0) {}
    if let (x, ..) | (x, 1 | 2) = (0, 1) {}
    if let [0 | 1] = [0] {}
    if let [x, 0 | 1] = [0, 1] {}
    if let [x, 0 | 1 | 2] = [0, 1] {}
    if let [x, ..] | [x, 1 | 2] = [0, 1] {}
    struct TS(u8, u8);
    if let TS(0 | 1, x) = TS(0, 0) {}
    if let TS(1 | 2 | 3, 0) = TS(0, 0) {}
    if let TS(x, ..) | TS(x, 1 | 2) = TS(0, 0) {}
    struct S {
        x: u8,
        y: u8,
    }
    if let S { x: 0 | 1, y } = (S { x: 0, y: 1 }) {}
    if let S { x: 0, y, .. } | S { y, x: 1 } = (S { x: 0, y: 1 }) {}
}
