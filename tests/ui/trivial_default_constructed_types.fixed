//@run-rustfix
//@aux-build:proc_macros.rs:proc-macro
#![allow(clippy::no_effect, unused)]
#![warn(clippy::trivial_default_constructed_types)]

#[macro_use]
extern crate proc_macros;

fn main() {
    0u32;
    let x: Option<u32> = None::<_>;
    let y: (usize,) = (0usize,);
    ();
    let x: [u32; 10] = [0u32; 10];
    let x: [f32; 1000] = [0.0f32; 1000];
    let x = "";
    let x = false;
    let x = (0u32, 0u32, false);
    // Do not lint
    let x = char::default();
    let x = NotDefault::default();
    let x = <(u32, u32, bool, &str)>::default();

    external! {
        u32::default();
        let x: Option<u32> = Option::default();
        let y: (usize,) = Default::default();
        <()>::default();
        let x: [u32; 10] = Default::default();
        let x: [f32; 1000] = [Default::default(); 1000];
        let x = <&str>::default();
        let x = bool::default();
        let x = char::default();
    }
    with_span! {
        span
        u32::default();
        let x: Option<u32> = Option::default();
        let y: (usize,) = Default::default();
        <()>::default();
        let x: [u32; 10] = Default::default();
        let x: [f32; 1000] = [Default::default(); 1000];
        let x = <&str>::default();
        let x = bool::default();
        let x = char::default();
    }
}

struct NotDefault;

impl NotDefault {
    pub fn default() -> u32 {
        0
    }
}
