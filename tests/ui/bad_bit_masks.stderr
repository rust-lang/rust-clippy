error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:12:13
   |
LL |     let _ = x & 0b0000 == 0b0000;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `_ & 0` is always equal to zero
   = note: `-D clippy::bad-bit-mask` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::bad_bit_mask)]`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:13:13
   |
LL |     let _ = x & 0b0000 == 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `_ & 0` is always equal to zero

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:16:13
   |
LL |     let _ = x & 0b0010 == 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x2` is missing bits contained in the compared constant `0x1`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:17:13
   |
LL |     let _ = x & 0b0001 == 0b0010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x1` is missing bits contained in the compared constant `0x2`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:21:13
   |
LL |     let _ = x & 0b0011 == 0b0100;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` is missing bits contained in the compared constant `0x4`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:23:13
   |
LL |     let _ = x & 0b0110 == 0b0111;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x6` is missing bits contained in the compared constant `0x7`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:24:13
   |
LL |     let _ = x & 0b0011 == 0b0101;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` is missing bits contained in the compared constant `0x5`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:30:13
   |
LL |     let _ = x | 0b0001 == 0b0000;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x1` has bits not contained in the compared constant `0x0`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:32:13
   |
LL |     let _ = x | 0b0010 == 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x2` has bits not contained in the compared constant `0x1`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:33:13
   |
LL |     let _ = x | 0b0001 == 0b0010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x1` has bits not contained in the compared constant `0x2`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:34:13
   |
LL |     let _ = x | 0b0011 == 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x1`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:35:13
   |
LL |     let _ = x | 0b0011 == 0b0010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x2`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:37:13
   |
LL |     let _ = x | 0b0011 == 0b0100;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x4`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:40:13
   |
LL |     let _ = x | 0b0011 == 0b0101;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x5`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:41:13
   |
LL |     let _ = x | 0b1111 == 0b1110;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0xf` has bits not contained in the compared constant `0xe`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:42:13
   |
LL |     let _ = x | 0b1111 == 0b1010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0xf` has bits not contained in the compared constant `0xa`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:44:13
   |
LL |     let _ = x & 0b0000 != 0b0000;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `_ & 0` is always equal to zero

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:45:13
   |
LL |     let _ = x & 0b0000 != 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `_ & 0` is always equal to zero

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:48:13
   |
LL |     let _ = x & 0b0010 != 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x2` is missing bits contained in the compared constant `0x1`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:49:13
   |
LL |     let _ = x & 0b0001 != 0b0010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x1` is missing bits contained in the compared constant `0x2`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:53:13
   |
LL |     let _ = x & 0b0011 != 0b0100;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` is missing bits contained in the compared constant `0x4`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:55:13
   |
LL |     let _ = x & 0b0110 != 0b0111;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x6` is missing bits contained in the compared constant `0x7`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:56:13
   |
LL |     let _ = x & 0b0011 != 0b0101;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` is missing bits contained in the compared constant `0x5`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:62:13
   |
LL |     let _ = x | 0b0001 != 0b0000;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x1` has bits not contained in the compared constant `0x0`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:64:13
   |
LL |     let _ = x | 0b0010 != 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x2` has bits not contained in the compared constant `0x1`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:65:13
   |
LL |     let _ = x | 0b0001 != 0b0010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x1` has bits not contained in the compared constant `0x2`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:66:13
   |
LL |     let _ = x | 0b0011 != 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x1`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:67:13
   |
LL |     let _ = x | 0b0011 != 0b0010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x2`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:69:13
   |
LL |     let _ = x | 0b0011 != 0b0100;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x4`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:72:13
   |
LL |     let _ = x | 0b0011 != 0b0101;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x3` has bits not contained in the compared constant `0x5`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:73:13
   |
LL |     let _ = x | 0b1111 != 0b1110;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0xf` has bits not contained in the compared constant `0xe`

error: this comparison is always true
  --> tests/ui/bad_bit_masks.rs:74:13
   |
LL |     let _ = x | 0b1111 != 0b1010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0xf` has bits not contained in the compared constant `0xa`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:76:13
   |
LL |     let _ = 0b0010 & x == 0b0001;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x2` is missing bits contained in the compared constant `0x1`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:77:13
   |
LL |     let _ = 0b0001 == x & 0b0010;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x2` is missing bits contained in the compared constant `0x1`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:78:13
   |
LL |     let _ = 0b0001 == 0b0010 & x;
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x2` is missing bits contained in the compared constant `0x1`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:80:13
   |
LL |     let _ = x & (0b0100 | 0b0010) == (0b0111 ^ 0b1000);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `0x6` is missing bits contained in the compared constant `0xf`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:97:17
   |
LL |         let _ = x & C == 0b0100;
   |                 ^^^^^^^^^^^^^^^
   |
   = note: `0x3` is missing bits contained in the compared constant `0x4`

error: this comparison is always false
  --> tests/ui/bad_bit_masks.rs:98:17
   |
LL |         let _ = x & 0b0001 == C;
   |                 ^^^^^^^^^^^^^^^
   |
   = note: `0x1` is missing bits contained in the compared constant `0x3`

error: aborting due to 38 previous errors

