error: calling `.parse()` without trimming the trailing newline character
  --> $DIR/read_line_without_trim.rs:12:25
   |
LL |     let _x: i32 = input.parse().unwrap();
   |                   ----- ^^^^^^^
   |                   |
   |                   help: try: `input.trim_end()`
   |
note: call to `.read_line()` here, which leaves a trailing newline character in the buffer, which in turn will cause `.parse()` to fail
  --> $DIR/read_line_without_trim.rs:11:5
   |
LL |     std::io::stdin().read_line(&mut input).unwrap();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: `-D clippy::read-line-without-trim` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::read_line_without_trim)]`

error: calling `.parse()` without trimming the trailing newline character
  --> $DIR/read_line_without_trim.rs:16:20
   |
LL |     let _x = input.parse::<i32>().unwrap();
   |              ----- ^^^^^^^^^^^^^^
   |              |
   |              help: try: `input.trim_end()`
   |
note: call to `.read_line()` here, which leaves a trailing newline character in the buffer, which in turn will cause `.parse()` to fail
  --> $DIR/read_line_without_trim.rs:15:5
   |
LL |     std::io::stdin().read_line(&mut input).unwrap();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: calling `.parse()` without trimming the trailing newline character
  --> $DIR/read_line_without_trim.rs:20:20
   |
LL |     let _x = input.parse::<u32>().unwrap();
   |              ----- ^^^^^^^^^^^^^^
   |              |
   |              help: try: `input.trim_end()`
   |
note: call to `.read_line()` here, which leaves a trailing newline character in the buffer, which in turn will cause `.parse()` to fail
  --> $DIR/read_line_without_trim.rs:19:5
   |
LL |     std::io::stdin().read_line(&mut input).unwrap();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: calling `.parse()` without trimming the trailing newline character
  --> $DIR/read_line_without_trim.rs:24:20
   |
LL |     let _x = input.parse::<f32>().unwrap();
   |              ----- ^^^^^^^^^^^^^^
   |              |
   |              help: try: `input.trim_end()`
   |
note: call to `.read_line()` here, which leaves a trailing newline character in the buffer, which in turn will cause `.parse()` to fail
  --> $DIR/read_line_without_trim.rs:23:5
   |
LL |     std::io::stdin().read_line(&mut input).unwrap();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: calling `.parse()` without trimming the trailing newline character
  --> $DIR/read_line_without_trim.rs:28:20
   |
LL |     let _x = input.parse::<bool>().unwrap();
   |              ----- ^^^^^^^^^^^^^^^
   |              |
   |              help: try: `input.trim_end()`
   |
note: call to `.read_line()` here, which leaves a trailing newline character in the buffer, which in turn will cause `.parse()` to fail
  --> $DIR/read_line_without_trim.rs:27:5
   |
LL |     std::io::stdin().read_line(&mut input).unwrap();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 5 previous errors

